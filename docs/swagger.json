{
    "swagger": "2.0",
    "info": {
        "title": "Swagger Gophermart API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:7000",
    "paths": {
        "/api/user/balance": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get the current balance of the user's loyalty points account.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance API"
                ],
                "summary": "Get user balance",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.BalanceResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/user/balance/withdraw": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Withdraw points from the loyalty points account to pay for a new order.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Balance API"
                ],
                "summary": "Withdrawal request",
                "parameters": [
                    {
                        "description": "Order number and withdrawal sum.",
                        "name": "withdrawal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BalanceWithdrawRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "Payment Required"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "description": "User authorization by login and password.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User API"
                ],
                "summary": "User authorization",
                "parameters": [
                    {
                        "description": "User login and password.",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/user/orders": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get a list of order numbers uploaded by the user,\ntheir processing statuses and information about accruals.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order API"
                ],
                "summary": "Get uploaded orders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.OrderResponse"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Loading by the user of the order number.",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Order API"
                ],
                "summary": "Add new order",
                "parameters": [
                    {
                        "description": "Order number.",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/user/register": {
            "post": {
                "description": "User registration by login and password.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User API"
                ],
                "summary": "User registration",
                "parameters": [
                    {
                        "description": "User login and password.",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/user/withdrawals": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get a list of withdrawals from a user's loyalty points account.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance API"
                ],
                "summary": "Get withdrawals list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.WithdrawalResponse"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.BalanceResponse": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "number"
                },
                "withdrawn": {
                    "type": "number"
                }
            }
        },
        "dto.BalanceWithdrawRequest": {
            "type": "object",
            "required": [
                "order",
                "sum"
            ],
            "properties": {
                "order": {
                    "type": "string"
                },
                "sum": {
                    "type": "number"
                }
            }
        },
        "dto.OrderResponse": {
            "type": "object",
            "properties": {
                "accrual": {
                    "type": "number"
                },
                "number": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uploaded_at": {
                    "type": "string"
                }
            }
        },
        "dto.UserLoginRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.UserRegisterRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.WithdrawalResponse": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string"
                },
                "processed_at": {
                    "type": "string"
                },
                "sum": {
                    "type": "number"
                }
            }
        }
    }
}