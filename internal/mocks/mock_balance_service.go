// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/msmkdenis/yap-gophermart/internal/balance/handler (interfaces: BalanceService)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	dto "github.com/msmkdenis/yap-gophermart/internal/balance/handler/dto"
	decimal "github.com/shopspring/decimal"
)

// MockBalanceService is a mock of BalanceService interface.
type MockBalanceService struct {
	ctrl     *gomock.Controller
	recorder *MockBalanceServiceMockRecorder
}

// MockBalanceServiceMockRecorder is the mock recorder for MockBalanceService.
type MockBalanceServiceMockRecorder struct {
	mock *MockBalanceService
}

// NewMockBalanceService creates a new mock instance.
func NewMockBalanceService(ctrl *gomock.Controller) *MockBalanceService {
	mock := &MockBalanceService{ctrl: ctrl}
	mock.recorder = &MockBalanceServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalanceService) EXPECT() *MockBalanceServiceMockRecorder {
	return m.recorder
}

// GetByUser mocks base method.
func (m *MockBalanceService) GetByUser(arg0 context.Context, arg1 string) (*dto.BalanceResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByUser", arg0, arg1)
	ret0, _ := ret[0].(*dto.BalanceResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByUser indicates an expected call of GetByUser.
func (mr *MockBalanceServiceMockRecorder) GetByUser(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByUser", reflect.TypeOf((*MockBalanceService)(nil).GetByUser), arg0, arg1)
}

// GetWithdrawals mocks base method.
func (m *MockBalanceService) GetWithdrawals(arg0 context.Context, arg1 string) ([]dto.WithdrawalResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWithdrawals", arg0, arg1)
	ret0, _ := ret[0].([]dto.WithdrawalResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWithdrawals indicates an expected call of GetWithdrawals.
func (mr *MockBalanceServiceMockRecorder) GetWithdrawals(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWithdrawals", reflect.TypeOf((*MockBalanceService)(nil).GetWithdrawals), arg0, arg1)
}

// Withdraw mocks base method.
func (m *MockBalanceService) Withdraw(arg0 context.Context, arg1, arg2 string, arg3 decimal.Decimal) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Withdraw", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// Withdraw indicates an expected call of Withdraw.
func (mr *MockBalanceServiceMockRecorder) Withdraw(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Withdraw", reflect.TypeOf((*MockBalanceService)(nil).Withdraw), arg0, arg1, arg2, arg3)
}
